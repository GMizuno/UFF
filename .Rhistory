f <- matrix(0, nrow=length(x1), ncol=length(x2))
for (i in 1:length(x1))
for(j in 1: length(x2))
f[i,j] <- dmvnorm(c(x1[i],x2[j]), mean=mu_c, sigma=sigma_c)
persp(x1, x2, f, theta = 70, phi = 30, col = "lightblue", ticktype = "detailed")
contour(x1, x2, f, draw=T, nlevels=20, labcex=0.8, xlab=expression(x[1]),ylab=expression(x[2]), drawlabels=FALSE)
f
f
mu_c
mu_c
A = matrix(c(1,0,0,0,0,0,1,0), byrow = T, ncol = 4)
mu_c = A %*% mu
sigma_c = A %*% sigma %*% t(A)
mu_c
A = matrix(c(1,0,0,1,0,0,0,0), nrow = 2 ,byrow =F)
mu_b = A %*% mu
sigma_b = A %*% sigma %*% t(A)
mu_b
sigma_b
x1
mu<-matrix(c(1,0), nrow=2) 		#vetor de m?dias
Sigma<-matrix(c(2,1,1,1), nrow=2) 	#matriz de vari?ncias e covari?ncias
p=length(mu)
library(grDevices)
library(mvtnorm)
x1 <- seq(-5, 5, length= 50)
x2 <- x1
f <- matrix(0, nrow=length(x1), ncol=length(x2))
for (i in 1:length(x1))
for(j in 1: length(x2))
f[i,j] <- dmvnorm(c(x1[i],x2[j]), mean=mu, sigma=Sigma)
persp(x1, x2, f, theta = 70, phi = 30, col = "red", ticktype = "detailed")
mu<-matrix(c(1,1), nrow=2) 		    #vetor de médias
Sigma<-matrix(c(7,0,0,7), nrow=2) 	#matriz de variâncias e covari?ncias
p=length(mu)
x1 <- seq(-10, 10, length= 50)
x1
x2 <- x1
f <- matrix(0, nrow=length(x1), ncol=length(x2))
for (i in 1:length(x1))
for(j in 1: length(x2))
f[i,j] <- dmvnorm(c(x1[i],x2[j]), mean=mu, sigma=Sigma)
persp(x1, x2, f, theta = 70, phi = 30, col = "lightblue", ticktype = "detailed")
mu<-matrix(c(1,0), nrow=2) 		#vetor de m?dias
Sigma<-matrix(c(2,1,1,1), nrow=2) 	#matriz de vari?ncias e covari?ncias
p=length(mu)
library(grDevices)
library(mvtnorm)
x1 <- seq(-5, 5, length= 50)
x2 <- x1
f <- matrix(0, nrow=length(x1), ncol=length(x2))
for (i in 1:length(x1))
for(j in 1: length(x2))
f[i,j] <- dmvnorm(c(x1[i],x2[j]), mean=mu, sigma=Sigma)
persp(x1, x2, f, theta = 70, phi = 30, col = "red", ticktype = "detailed")
A = matrix(c(1,2,-3), ncol = 3)
mu_a = A %*% mu
#X~N_3(mu,sigma), sendo
mu=c(10,0,1)
mu
sigma=matrix(c(5,5,5,5,15,10,5,10,10),3,3,byrow=T)
sigma
A = matrix(c(1,2,-3), ncol = 3)
mu_a = A %*% mu
mu_a = A %*% mu; mu_a
sigma_a = A %*% sigma %*% t(A); sigma_a
A = matrix(c(0,1,0,0,0,1),ncol = 1,byrow = T); A
A = matrix(c(0,1,0,0,0,1),nrow = 2,byrow = T); A
mu_b = A %*% mu; mu_b
A = matrix(c(0,1,0,0,0,1),nrow = 2,byrow = T); A
mu_b = A %*% mu; mu_b
sigma_b = A %*% sigma %*% t(A); sigma_b
A =
## [X_2,X_3]
A = matrix(c(0,1,0,0,0,1),nrow = 2,byrow = T); A
A =
## [X_2,X_3]
A = matrix(c(0,1,0,0,0,1),nrow = 2,byrow = T); A
mu2_b = A %*% mu; mu2_b
sigma2_b = A %*% sigma %*% t(A); sigma2_b
A = matrix(c(1,0,0)) ; A
A = matrix(c(1,0,0), nrow = 1) ; A
mu1_b = A %*% mu
A = matrix(c(1,0,0), nrow = 1) ; A
mu1_b = A %*% mu ; mu1_b
sigma2_b = A %*% sigma %*% t(A); sigma2_b
sigma
mu
sigma
sigma2_b
sigma2_b = A %*% sigma %*% t(A); sigma2_b
## [X_2,X_3]
A = matrix(c(0,1,0,0,0,1),nrow = 2,byrow = T); A
mu2_b = A %*% mu; mu2_b
sigma2_b = A %*% sigma %*% t(A); sigma2_b
sigma
sigma2_b
## [X_2,X_3]
A = matrix(c(0,1,0,0,0,1),nrow = 2,byrow = T); A
mu2_b = A %*% mu; mu2_b
?%*%
A
crossprod(A,mu)
## [X_2,X_3]
A = matrix(c(0,1,0,0,0,1),nrow = 2,byrow = T); A
mu2_b = A %*% mu; mu2_b
sigma2_b = A %*% sigma %*% t(A); sigma2_b
sigma
mu
## X1
A = matrix(c(1,0,0), nrow = 1) ; A
mu1_b = A %*% mu ; mu1_b
sigma2_b = A %*% sigma %*% t(A); sigma2_b
## X1
A = matrix(c(1,0,0), nrow = 1) ; A
mu1_b = A %*% mu ; mu1_b
sigma1_b = A %*% sigma %*% t(A); sigma2_b
## [X_2,X_3]
A = matrix(c(0,1,0,0,0,1),nrow = 2,byrow = T); A
mu2_b = A %*% mu; mu2_b
sigma2_b = A %*% sigma %*% t(A); sigma2_b
sigma
mu1_b
## X1
A = matrix(c(1,0,0), nrow = 1) ; A
mu1_b = A %*% mu ; mu1_b
sigma1_b = A %*% sigma %*% t(A); sigma2_b
## X1
A = matrix(c(1,0,0), nrow = 1) ; A
mu1_b = A %*% mu ; mu1_b
sigma1_b = A %*% sigma %*% t(A); sigma2_b
sigma
## X1
A = matrix(c(1,0,0), nrow = 1) ; A
mu1_b = A %*% mu ; mu1_b
sigma1_b = A %*% sigma %*% t(A); sigma2_b
#X~N_3(mu,sigma), sendo
mu=c(10,0,1)
mu
sigma=matrix(c(5,5,5,5,15,10,5,10,10),3,3,byrow=T)
sigma
A = matrix(c(1,2,-3), ncol = 3)
mu_a = A %*% mu; mu_a
sigma_a = A %*% sigma %*% t(A); sigma_a
## X1
A = matrix(c(1,0,0), nrow = 1) ; A
mu1_b = A %*% mu ; mu1_b
sigma1_b = A %*% sigma %*% t(A); sigma2_b
source('F:/GitHub/UFF/Analise_Multivariada_1/Lista_3/Lista_3_normal.R', encoding = 'UTF-8', echo=TRUE)
sigma1_b = A %*% sigma %*% t(A); sigma1_b
## X1
A = matrix(c(1,0,0), nrow = 1) ; A
mu1_b = A %*% mu ; mu1_b
sigma1_b = A %*% sigma %*% t(A); sigma1_b
mu1_b
sigma
mu_cond = mu1_b + matrix(c(5,5)) %*% t(sigma2_b) %*% (matrix(c(-1,3)) - mu2_b)
matrix(c(5,5)) %*% t(sigma2_b)
#X~N_3(mu,sigma), sendo
mu=c(10,0,1)
mu
sigma=matrix(c(5,5,5,5,15,10,5,10,10),3,3,byrow=T)
sigma
A = matrix(c(1,2,-3), ncol = 3)
mu_a = A %*% mu; mu_a
sigma_a = A %*% sigma %*% t(A); sigma_a
## X1
A = matrix(c(1,0,0), nrow = 1) ; A
mu1_b = A %*% mu ; mu1_b
sigma1_b = A %*% sigma %*% t(A); sigma1_b
## [X_2,X_3]
A = matrix(c(0,1,0,0,0,1),nrow = 2,byrow = T); A
mu2_b = A %*% mu; mu2_b
sigma2_b = A %*% sigma %*% t(A); sigma2_b
mu_cond = mu1_b + matrix(c(5,5)) %*% t(sigma2_b) %*% (matrix(c(-1,3)) - mu2_b)
sigma2_b
matrix(c(5,5)
matrix(c(5,5))
matrix(c(5,5))
mu_cond = mu1_b + t(matrix(c(5,5))) %*% t(sigma2_b) %*% (matrix(c(-1,3)) - mu2_b)
mu_cond = mu1_b + t(matrix(c(5,5))) %*% t(sigma2_b) %*% (matrix(c(-1,3)) - mu2_b); mu_cond
mu_cond = mu1_b + t(matrix(c(5,5))) %*% solve(sigma2_b) %*% (matrix(c(-1,3)) - mu2_b); mu_cond
sigma
sigma_cond = sigma1_b - t(matrix(c(5,5))) %*% solve(sigma2_b) %*% matrix(c(5,5))
sigma_cond = sigma1_b - t(matrix(c(5,5))) %*% solve(sigma2_b) %*% matrix(c(5,5)); sigma_cond
A = matrix(c(1,0,0),ncol = 3)
A = matrix(c(1,0,0),ncol = 3); A
#X~N_3(mu,sigma), sendo
mu=c(0,0,0)
mu
sigma=matrix(c(5,0,0,0,7,-1,0,-1,2),3,3,byrow=T)
sigma
##X1
A = matrix(c(1,0,0),ncol = 3); A
mu1_a = A %*% mu
mu1_a = A %*% mu; mu1_a
sigma1_a = A %*% sigma %*% t(A)
sigma1_a = A %*% sigma %*% t(A); sigma1_a
##[X2,X3]
A = matrix(c(0,1,1), ncol = 3); A
mu2_a = A %*% mu ; mu2_a
##[X2,X3]
A = matrix(c(0,1,1), ncol = 3); A
mu2_a = A %*% mu ; mu2_a
##[X2,X3]
A = matrix(c(0,1,0,0,0,1),byrow = T, ncol = 3); A
mu2_a = A %*% mu ; mu2_a
sigma2_a = A %*% sigma %*% t(A); sigma2_a
##X1
A = matrix(c(1,0,0),ncol = 3); A
mu1_a = A %*% mu; mu1_a
sigma1_a = A %*% sigma %*% t(A); sigma1_a
sigma
##X1/[X2,X3]=(4,4)
mu_cond = 0 + c(0,0) %*% solve(sigma2_b) %*% (c(4,4) - mu2_a)
##X1/[X2,X3]=(4,4)
mu_cond = 0 + c(0,0) %*% solve(sigma2_b) %*% (c(4,4) - mu2_a); mu_cond
##X1/[X2,X3]=(4,4)
mu_cond = 0 + c(0,0) %*% solve(sigma2_b) %*% (c(4,4) - mu2_a); mu_cond
sigma_cond = sigma1_a -  c(0,0) %*% solve(sigma2_b) %*% c(0,0); sigma_cond
sigma
mu
sigma
A = matrix(c(0,1,0),ncol = 3); A
mu1_b = A %*% mu; mu1_b
sigma1_b = A %*% sigma %*% t(A); sigma1_b
sigma
A = matrix(c(1,0,0,0,0,1),byrow = T, ncol = 3); A
mu2_b = A %*% mu; mu2_b
sigma2_b = A %*% sigma %*% t(A); sigma2_b
sigma
mu_cond =
sigma_cond =  mu1_b - c(0,-1) %*% solve(sigma_b) %*% c(0,-1); sigma_cond
mu_cond =
sigma_cond =  sigma1_b - c(0,-1) %*% solve(sigma_b) %*% c(0,-1); sigma_cond
mu_cond = mu1_b + c(0,-1) %*% solve(sigma_b) %*% (c(2,3) - mu2_b)
mu_cond = mu1_b + c(0,-1) %*% solve(sigma_b) %*% (c(2,3) - mu2_b); mu_cond
mu1_b
c(0,-1)
mu1_b
c(0,-1) %*% solve(sigma_b) %*% (c(2,3) - mu2_b)
#X~N_3(mu,sigma), sendo
mu=c(0,0,0)
mu
sigma=matrix(c(5,0,0,0,7,-1,0,-1,2),3,3,byrow=T)
sigma
mu_cond = mu1_b + c(0,-1) %*% solve(sigma_b) %*% (c(2,3) - mu2_b); mu_cond
sigma_cond =  sigma1_b - c(0,-1) %*% solve(sigma_b) %*% c(0,-1); sigma_cond
##X_2
A = matrix(c(0,1,0),ncol = 3); A
mu1_b = A %*% mu; mu1_b
sigma1_b = A %*% sigma %*% t(A); sigma1_b
##[X1,X3]
A = matrix(c(1,0,0,0,0,1),byrow = T, ncol = 3); A
mu2_b = A %*% mu; mu2_b
sigma2_b = A %*% sigma %*% t(A); sigma2_b
mu_cond = mu1_b + c(0,-1) %*% solve(sigma_b) %*% (c(2,3) - mu2_b); mu_cond
mu_cond = mu1_b + c(0,-1) %*% solve(sigma_b) %*% (c(2,3) - mu2_b); mu_cond
sigma_cond =  sigma1_b - c(0,-1) %*% solve(sigma_b) %*% c(0,-1); sigma_cond
##X_2
A = matrix(c(0,1,0),ncol = 3); A
mu1_b = A %*% mu; mu1_b
sigma1_b = A %*% sigma %*% t(A); sigma1_b
sigma
#X~N_3(mu,sigma), sendo
mu=c(0,0,0)
mu
sigma=matrix(c(5,0,0,0,7,-1,0,-1,2),3,3,byrow=T)
sigma
##X1
A = matrix(c(1,0,0),ncol = 3); A
mu1_a = A %*% mu; mu1_a
sigma1_a = A %*% sigma %*% t(A); sigma1_a
##[X2,X3]
A = matrix(c(0,1,0,0,0,1),byrow = T, ncol = 3); A
mu2_a = A %*% mu ; mu2_a
sigma2_a = A %*% sigma %*% t(A); sigma2_a
##X1/[X2,X3]=(4,4) ~ N(0,5)
mu_cond = 0 + c(0,0) %*% solve(sigma2_b) %*% (c(4,4) - mu2_a); mu_cond
sigma_cond = sigma1_a -  c(0,0) %*% solve(sigma2_b) %*% c(0,0); sigma_cond
##X_2
A = matrix(c(0,1,0),ncol = 3); A
mu1_b = A %*% mu; mu1_b
sigma1_b = A %*% sigma %*% t(A); sigma1_b
##[X1,X3]
A = matrix(c(1,0,0,0,0,1),byrow = T, ncol = 3); A
mu2_b = A %*% mu; mu2_b
sigma2_b = A %*% sigma %*% t(A); sigma2_b
mu_cond = mu1_b + c(0,-1) %*% solve(sigma_b) %*% (c(2,3) - mu2_b); mu_cond
sigma_cond =  sigma1_b - c(0,-1) %*% solve(sigma_b) %*% c(0,-1); sigma_cond
sigma_cond =  sigma1_b - c(0,-1) %*% solve(sigma_b) %*% c(0,-1); sigma_cond
mu_cond = mu1_b + c(0,-1) %*% solve(sigma_b) %*% (c(2,3) - mu2_b); mu_cond
sigma1_b
solve(sigma_b)
mu_cond = mu1_b + c(0,-1) %*% solve(sigma_b) %*% (c(2,3) - mu2_b); mu_cond
sigma_cond =  sigma1_b - c(0,-1) %*% solve(sigma_b) %*% c(0,-1); sigma_cond
sigma_b
sigma2_b = A %*% sigma %*% t(A); sigma2_b
sigma_cond =  sigma1_b - c(0,-1) %*% solve(sigma2_b) %*% c(0,-1); sigma_cond
7 - matrix(c(0, -1), 1,2) %*% solve(matrix(c(5,0,0,2), 2,2, byrow=T)) %*% matrix(c(0,1),2,1)
mu_cond = mu1_b + c(0,-1) %*% solve(sigma2_b) %*% (c(2,3) - mu2_b); mu_cond
#X~N_4(mu,sigma), sendo
mu=c(1,-1,2,0)
mu
sigma=matrix(c(2,0,1,0,0,3,0,2,1,0,5,0,0,2,0,3),4,4,byrow=T)
sigma
#X~N_4(mu,sigma), sendo
mu=c(1,-1,2,0)
mu
sigma=matrix(c(2,0,1,0,0,3,0,2,1,0,5,0,0,2,0,3),4,4,byrow=T)
sigma
A = matrix(c(1,0,0,1,0,0,0,0), nrow = 2 ,byrow =F)
mu_b = A %*% mu
sigma_b = A %*% sigma %*% t(A)
mu_b
sigma_b
A = matrix(c(1,0,0,0,0,1,0,0),ncol = 4,byrow = T); A
mu1_d = A %*% mu; mu1_d
#[X1,X2]
A = matrix(c(1,0,0,0,0,1,0,0),ncol = 4,byrow = T); A
mu1_d = A %*% mu; mu1_d
mu1_d = A %*% mu; mu1_d
sigma1_d = A %*% sigma %*% t(A); sigma1_d
sigma
A = matrix(c(0,0,1,0,0,0,0,1),ncol = 4, byrow = T); A
mu2_d = A %*% mu; mu2_d
sigma2_d = A %*% sigma %*% t(A); sigma2_d
sigma1_d = A %*% sigma %*% t(A); sigma1_d
sigma
##[X1,X2]
A = matrix(c(1,0,0,0,0,1,0,0),ncol = 4,byrow = T); A
mu1_d = A %*% mu; mu1_d
sigma1_d = A %*% sigma %*% t(A); sigma1_d
A = matrix(c(0,0,1,0,0,0,0,1),ncol = 4, byrow = T); A
mu2_d = A %*% mu; mu2_d
sigma2_d = A %*% sigma %*% t(A); sigma2_d
sigma
matrix(c(1,0,0,2), ncol=2,byrow = T)
mu_cond = mu1_d + matrix(c(1,0,0,2), ncol=2,byrow = T) %*% solve(sigma2_d) %*% (c(2,3) - mu2_d); mu_cond
mu_cond = mu1_d + matrix(c(1,0,0,2), ncol=2,byrow = T) %*% solve(sigma2_d) %*% (c(2,3) - mu2_d); mu_cond
mu1_d
matrix(c(1,0,0,2), ncol=2,byrow = T)
mu_cond = mu1_d + matrix(c(1,0,0,2), ncol=2,byrow = T) %*% solve(sigma2_d) %*% (c(2,3) - mu2_d); mu_cond
sigma_cond = sigma1_d +matrix(c(1,0,0,2), ncol=2,byrow = T) %*% solve(sigma2_d) %*% matrix(c(1,0,0,2), ncol=2,byrow = T); sigma_cond
mu2_d
mu_cond = mu1_d + matrix(c(1,0,0,2), ncol=2,byrow = T) %*% solve(sigma2_d) %*% (c(2,3) - mu2_d); mu_cond
sigma1_d
sigma
sigma_cond = sigma1_d +matrix(c(1,0,0,2), ncol=2,byrow = T) %*% solve(sigma2_d) %*% matrix(c(1,0,0,2), ncol=2,byrow = T); sigma_cond
git status
getwd()
setwd("F://GitHub//UFF")
install.packages("foreign")
BD = foreign::read.spss("//Modelos_lineares1//trabalhos//trabalho_1//internacoes.sav)
BD = foreign::read.spss("//Modelos_lineares1//trabalhos//trabalho_1//internacoes.sav")
BD = foreign::read.spss("Modelos_lineares1//trabalhos//trabalho_1//internacoes.sav")
git status
BD = foreign::read.spss("internacoes.sav")
BD = foreign::read.spss("Modelos_lineares1//trabalhos//trabalho_1//internacoes.sav")
View(BD)
tabela = dplyr::as_tibble(BD); tabela
View(tabela)
plot(tabela$Percentual_infectados~tabela$Tempo_internacao)
plot(tabela$Tempo_internacaotabela$Percentual_infectados)
plot(tabela$Tempo_internacao~tabela$Percentual_infectados)
plot(tabela$Percentual_infectados~tabela$Tempo_internacao)
plot(tabela$Percentual_infectados~tabela$Tempo_internacao, pch = 19)
plot(tabela$Percentual_infectados~tabela$Tempo_internacao, pch = 19,
ylab = "Percentual de infectados",
xlab = "Tempo de internação")
modelo1 = lm(tabela$Percentual_infectados~tabela$Tempo_internacao)
plot(modelo1)
plot(modelo1)
plot(modelo1)
plot(modelo1)
modelo1 = lm(tabela$Tempo_internacao~tabela$Percentual_infectados)
plot(modelo1)
modelo1 = lm(tabela$Percentual_infectados~tabela$Tempo_internacao)
plot(modelo1)
summary(modelo1)
plot(tabela$Percentual_infectados~tabela$Tempo_internacao, pch = 19,
ylab = "Percentual de infectados",
xlab = "Tempo de internação")
ei = rstandard(modelo1)
modelo1 = lm(tabela$Percentual_infectados~tabela$Tempo_internacao)
summary(modelo1)
ei = rstandard(modelo1)
plot(ei~tabela$Tempo_internacao, pch = 19, ylim = c(-3,3))
abline(h = c(-2,0,2), col = c("red","black","red"))
yichapeu = fitted(modelo1)
plot(ei~tabela$Tempo_internacao, pch = 19, ylim = c(-3,3))
plot(ei~yichapeu, pch = 19, ylim = c(-3,3))
plot(ei~tabela$Tempo_internacao, pch = 19, ylim = c(-3,3))
plot(ei~yichapeu, pch = 19, ylim = c(-3,3))
plot(ei~tabela$Tempo_internacao, pch = 19, ylim = c(-3,3))
plot(ei~yichapeu, pch = 19, ylim = c(-3,3))
abline(h = c(-2,0,2), col = c("red","black","red"))
yichapeu = fitted(modelo1)
ei = rstandard(modelo1)
plot(ei~tabela$Tempo_internacao, pch = 19, ylim = c(-3,3))
plot(ei~yichapeu, pch = 19, ylim = c(-3,3))
abline(h = c(-2,0,2), col = c("red","black","red"))
qqnorm(ei, pch = 19, main="" , ylab = "Quantis teóricos", xlab = "Quantis dos resíduos studentizados")
abline(0,1)
abline(0,1, col = "blue")
qqnorm(ei, pch = 18, main="" , ylab = "Quantis teóricos", xlab = "Quantis dos resíduos studentizados")
abline(0,1, col = "blue")
qqnorm(ei, pch = 10, main="" , ylab = "Quantis teóricos", xlab = "Quantis dos resíduos studentizados")
qqnorm(ei, pch = 8, main="" , ylab = "Quantis teóricos", xlab = "Quantis dos resíduos studentizados")
qqnorm(ei, pch = 20, main="" , ylab = "Quantis teóricos", xlab = "Quantis dos resíduos studentizados")
abline(0,1, col = "blue")
BD = foreign::read.spss("Modelos_lineares1//trabalhos//trabalho_1//internacoes.sav")
tabela = dplyr::as_tibble(BD); tabela
plot(tabela$Percentual_infectados~tabela$Tempo_internacao, pch = 19,
ylab = "Percentual de infectados",
xlab = "Tempo de internação")
modelo1 = lm(tabela$Percentual_infectados~tabela$Tempo_internacao)
summary(modelo1)
yichapeu = fitted(modelo1)
ei = rstandard(modelo1)
plot(ei~tabela$Tempo_internacao, pch = 20, ylim = c(-3,3))
plot(ei~yichapeu, pch = 20, ylim = c(-3,3))
abline(h = c(-2,0,2), col = c("red","black","red"))
qqnorm(ei, pch = 20, main="" , ylab = "Quantis teóricos", xlab = "Quantis dos resíduos studentizados")
abline(0,1, col = "blue")
plot(ei~tabela$Tempo_internacao, pch = 20, ylim = c(-3,3))
BD = foreign::read.spss("Modelos_lineares1//trabalhos//trabalho_1//internacoes.sav")
tabela = dplyr::as_tibble(BD); tabela
plot(tabela$Percentual_infectados~tabela$Tempo_internacao, pch = 19,
ylab = "Percentual de infectados",
xlab = "Tempo de internação")
modelo1 = lm(tabela$Percentual_infectados~tabela$Tempo_internacao)
summary(modelo1)
yichapeu = fitted(modelo1)
ei = rstandard(modelo1)
plot(ei~tabela$Tempo_internacao, pch = 20, ylim = c(-3,3), ylab = "Resíduos studentizados", xlab = "Tempo de internação")
plot(ei~yichapeu, pch = 20, ylim = c(-3,3), ylab = "Resíduos studentizados", xlab = "Percentual de infectados estimado")
abline(h = c(-2,0,2), col = c("red","black","red"))
qqnorm(ei, pch = 20, main="" , ylab = "Quantis teóricos", xlab = "Quantis dos resíduos studentizados")
abline(0,1, col = "blue")
# Gerando um gráfico de dispersão de percentual de infectados x tempo de internação
plot(tabela$Percentual_infectados~tabela$Tempo_internacao, pch = 19,
ylab = "Percentual de infectados",
xlab = "Tempo de internação")
abline(modelo1)
#Análise gráfica dos resíduos para avaliação das hipóteses básicas do modelo
ei = rstandard(modelo1)
plot(ei~tabela$Tempo_internacao, pch = 20, ylim = c(-3,3), ylab = "Resíduos studentizados", xlab = "Tempo de internação")
plot(ei~yichapeu, pch = 20, ylim = c(-3,3), ylab = "Resíduos studentizados", xlab = "Percentual de infectados estimado")
abline(h = c(-2,0,2), col = c("red","black","red"))
qqnorm(ei, pch = 20, main="" , ylab = "Quantis teóricos", xlab = "Quantis dos resíduos studentizados")
abline(0,1, col = "blue")
expression(mu)
expression(mu/2)
qt(0.05/2, 98, lower.tail = F)
anova(modelo1)
summary(modelo1)
plot(df)
plot(function(x)df(x,1,98))
qf(0.05,1,98,lower.tail = F)
x = c(scan)
x = c(scan())
x
y = c(scan)
y = c(scan())
x
y
plot(y~x )
plot(y~x ,pch = 20)
mean(x)
modelo1 = lm(y~x)
cor(modelo1)
x
cor(x,y)
cor(y,x)
cor(x,y)
t = summary(modelo1)
sqrt(t$r.squared)
cor(x,y)
summary(modelo1)
anova(modelo1)
t$sigma^2
qt(0.025,10,lower.tail = )
qt(0.025,10,lower.tail = F)
t
ei = rstandard(modelo1)
ei
plot(ei)
plot(ei, ylim= c(-3,3))
plot(ei, ylim= c(-3,3))
abline(h = c(-2,0,2), col = c("red","black","red"))
qqnorm(ei)
abline(0m)
abline(0,1)
plot(ei~x, ylim= c(-3,3))
abline(h = c(-2,0,2), col = c("red","black","red"))
plot(ei~fitted(modelo1), ylim= c(-3,3))
abline(h = c(-2,0,2), col = c("red","black","red"))
qqnorm(ei)
abline(0,1)
abline(modelo1)
qt(0.025,18,lower.tail = F)
x = c(scan)
1.15
x = c(scan())
x = c(scan())
anova(t)
t
qt(0.025,27,lower.tail = F)
t
lm(y~x)
t
